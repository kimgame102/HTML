서버와 클라이언트
	클라이언트: 서버에게 요청하는 대상
	서버: 요청받은 서비스를 응답해주는 대상

웹(Web)
	요청과 응답이 일어나는 장소.

웹 브라우저(Web Browser)
	사용자의 요청에 맞는 주소로 찾아가서 인터넷 컨텐츠를 검색 및 열람 후
	사용자에게 응답하기 위한 응용 프로그램의 총칭이다.

프로토콜(protocol)
	사용자의 요청에 반드시 응답해야 한다는 규약이다.
	
	- http(Hypertext Transfer Protocol)
		클라이언트와 서버 간의 웹 페이지 등의 자원을 통신하는 규약
		텍스트로 통신하기 때문에 가로채어 본다면 누구든 내용을 볼 수 있다.
		
	- https(Hypertext Transfer protocol Secure Socket)
		자원을 공개키 암호화 방식으로 암호화해서 통신하는 규약
		

IP(Internet Protocol)
	네트워크 상에서 인터넷에 접속할 때 다른 컴퓨터와 구별될 수 있도록 하는
	고유 번호이다. 컴퓨터가 다른 컴퓨터를 찾을 때 쓰는 고유한 값이다.
	
DNS(Domain Naming Service)
	IP 주소는 기억하고 이해하기 힘들기 때문에 이를 위해서 이름을 부여할 수 있도록 하는 서비스
	
WWW(World Wide Web)
	인터넷에 연결된 전 세계 컴퓨터들을 통해 사람들이 정보를 공유할 수 있는 정보공간

W3C
	WWW를 위한 표준을 제정하고 관리하는 중립적인 기관이다.
--------------------------------------------------------------------------------------------------------------------------------
웹 표준(Web Standard)
	1. HTML(Hypertext Markup Language)
		클라이언트에게 보여질 화면의 기본 골조를 제작할 수 있는 마크업 언어이다.
		마크업 언어란 태그방법 체계를 의미하며, 태그 등을 이용해서 문서나
		데이터의 구조를 기술하는 언어이다.

	2. CSS(Cascading Style Sheets)
		구체적으로어떤 스타일로 요소가 표시되는 지를 정하는 규격이다.
		HTML은 문서를 구조화(레이아웃)하는 것 뿐만 아니라 꾸미기도 할 수 있지만,
		동일한 디자인을 사용한 문서가 여러 개 있다면, 변경 시 모두 하나씩 수정해야 한다.
		따라서 CSS는 이러한 문제를 해결함과 동시에 웹 페이지에서 내용과 스타일을 분리하고,
		역할도 분리해준다.

 	3. JS(JavaScript)
		화면 쪽에서 연산이 가능한 스크립트 언어이다.
		사용자의 다양한 이벤트 처리, 비동기 통신 등을 자유롭게 사용할 수 있다.
		유효성 검사, 통신, 이벤트, 레이아웃 및 스타일 변경 등을 담당한다.

 	4. XHTML(Extensible Hypertext Markup Language)
		기존에 사용되던 HTML 규격이 가진 문제점을 극복하고 보다 다양한 분야에 응용될 수 있도록
		해주는 여러가지 확장 기능을 포함한다.
		HTML과 XHTML은 사실상 큰 차이 없이 사용된다.

 	5. XML(Extensible Markup Language)
		어떠한 데이터를 설명하기 위해서 임의로 지은 태그로 데이터를 감싼다.
		태그로 데이터를 설명하며, 이것이 데이터의 표시(Markup)가 되고 추가적인 데이터가 생기면
		태그 추가와 태그 내부 내용을 추가할 수 있다.
		따라서 데이터 전달에 목적이 있다.

		<?xml version="1.0">
		<user>
			<user-id>hds1234</user-id>
			<name>한동석</name>
		</user>
----------------------------------------------------------------------------------------------------------------------------------
HTML 요소
	<p> You are better </p>
	----- ---------------- ----
               (1)             (2)	   (3)

	(1) 여는 태그: 태그의 이름(예를 들어, P)을 적고 열고 닫는 꺽쇠 괄호로 구성된다.
	(2) 내용: 해당 태그에 적용될 내용이며, 단순한 텍스트를 의미한다.
	(3) 닫는 태그: 태크의 이름 앞에 슬래시(/)가 있다.

속성(Attributes)
	태그는 속성을 가질 수 있다.

	<p class ="conversation"> Yor are much better</p>

	속성은 내용에 나타내고 싶지 않지만 추가적인 내용을 담고 싶을 대 사용한다.
	특히 id와 class 속성은 스타일에 관련된 내용이나 기타 연산등의 내용을 위해 해당 태그를
	찾을 수 있는 구분점 역할을 수행한다.

	- 속성 사용 시 주의 사항
	
	1. 태그 이름 다음에 오는 속성은 태그 이름과속성 사이에 공백이 있어야 하고,
	   여러 속성이 있을 경우에는 속성 사이에도 공백이 있어야 한다.
	   <p id="conv1" class="conversation"> You are much better</p>

	2. 속성이름 다음에는 등호(=)를 작성한다.
	
	3. 속성 값은 따옴표 안에 작성한다(따옴표를 생략할 수 있다).

내포된 태그(Nesting tags)
	태그의 내용 안에 다른 태그를 넣는 기법
	해당 부분에 다른 스타일 또는 다른 연산, 레이아웃 등을 적용하고자 할 때 사용한다.

HTMl 주의사항
	1. HTML은 대소문자를 구분하지 않지만 되도록 소문자로 작성한다.
	2. 속성의 값은 따옴표를 사용하지 않아도 되는 경우가 있지만,
	    속성 값에 띄어쓰기가 있을 경우에는 반드시 따옴표로 감싸줘야 한다.
	3. HTML에서 작은 따옴표와 큰 따옴표는 둘 다 같은 의미이다.
















